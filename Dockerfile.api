# syntax=docker/dockerfile:1

# Builder stage: install dependencies
FROM python:3.12-slim AS builder
WORKDIR /app

# Install native libraries required for WeasyPrint PDF generation
RUN apt-get update \
    && apt-get install -y --no-install-recommends \
        build-essential \
        libcairo2 \
        libcairo2-dev \
        libpango-1.0-0 \
        libpango1.0-dev \
        libpangocairo-1.0-0 \
        libpangoft2-1.0-0 \
        libgdk-pixbuf-2.0-0 \
        libffi-dev \
        fontconfig \
    && rm -rf /var/lib/apt/lists/*

# Install application and API dependencies into a temporary prefix
COPY pyproject.toml README.md ./
COPY config ./config
COPY loto ./loto
COPY apps/api ./apps/api
COPY demo ./demo
RUN pip install --no-cache-dir --prefix=/install -r apps/api/requirements.txt \
    && pip install --no-cache-dir --prefix=/install .

# Final stage
FROM python:3.12-slim
WORKDIR /app

# Install runtime libraries for WeasyPrint
RUN apt-get update \
    && apt-get install -y --no-install-recommends \
        libcairo2 \
        libpango-1.0-0 \
        libpangocairo-1.0-0 \
        libpangoft2-1.0-0 \
        libgdk-pixbuf-2.0-0 \
        fontconfig \
        curl \
    && rm -rf /var/lib/apt/lists/*

# Copy installed packages and application source
COPY --from=builder /install /usr/local
COPY config ./config
COPY loto ./loto
COPY apps/api ./apps/api
COPY demo ./demo

# Create non-root user
RUN useradd --create-home appuser && chown -R appuser /app
USER appuser

EXPOSE 8000

HEALTHCHECK --interval=30s --timeout=10s --start-period=90s --retries=3 CMD curl -fsS http://localhost:8000/healthz || exit 1

CMD ["./apps/api/entrypoint.sh"]
